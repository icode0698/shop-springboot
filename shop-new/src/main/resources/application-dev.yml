spring:
  datasource:
    url: jdbc:mysql://localhost:3306/shop_online?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: root
    druid:
      initial-size: 5 #连接池初始化大小
      min-idle: 10 #最小空闲连接数
      max-active: 20 #最大连接数
      web-stat-filter:
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" #不统计这些请求数据
      stat-view-servlet: #访问监控网页的登录用户名和密码
        login-username: druid
        login-password: druid
#        enabled: true #启用监控网页

  kafka:
    bootstrap-servers: localhost:9092  #kafka集群
    #初始化生产者配置
    producer:
      retries: 0  #重试次数
      acks: 1  # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      batch-size: 16384  #批量大小
      properties:
        linger:
          ms: 0  #提交延迟
        #当生产端积累的消息达到batch-size或接收到消息linger.ms后,生产者就会将消息提交给kafka
        #linger-ms为0表示每接收到一条消息就提交给kafka,这时候batch-size其实就没用了
#        partitioner:
#          class:   #自定义分区器
      buffer-memory: 33554432  #生产端缓冲区大小
      key-serializer: org.apache.kafka.common.serialization.StringSerializer  #Kafka提供的序列化和反序列化类
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    #初始化消费者配置
    consumer:
      enable-auto-commit: true  #是否自动提交offset
      auto-commit-interval: 1000  #提交offset延时(接收到消息后多久提交offset)
      # 当kafka中没有初始offset或offset超出范围时将自动重置offset
      # earliest:重置为分区中最小的offset;
      # latest:重置为分区中最新的offset(消费分区中新产生的数据);
      # none:只要有一个分区不存在已提交的offset,就抛出异常;
      auto-offset-reset: latest
      properties:
        group:
          id: defaultConsumerGroup  #默认的消费组ID
        session:
          timeout:
              ms: 120000  #消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
        request:
          timeout:
              ms: 180000  #消费请求超时时间
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer  #Kafka提供的序列化和反序列化类
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 50  #批量消费每次最多消费多少条消息
#    listener:
#      missing-topics-fatal: false  #消费端监听的topic不存在时，项目启动会报错
#      type: batch  #设置批量消费

  redis:
    host: localhost # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: # Redis服务器连接密码（默认为空）
    timeout: 300ms # 连接超时时间（毫秒）
  mybatis:
    mapper-locations:
      - classpath:mapper/*.xml
  mail:
    host: smtp.163.com #SMTP服务器
    username:  #发送验证码邮箱
    password:  #授权码
    default-encoding: utf-8 #编码

#自定义配置信息
shop:
  #kafka主题信息
  kafka:
    topic:
      test-name: testtopic
      test-partitions: 1
      test-factor: 1
      email-code-name: emailCode
      email-code-partitions: 1
      email-code-factor: 1

